<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
</head>

<body>
  <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
  <div id="player"></div>

  <script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        height: '1080',
        width: '1920',
        videoId: '{{video_id}}',
        suggestedQuality: 'default',
        playerVars: { 
          'enablejsapi': 1, 
          'origin': null
        },
        events: {
          'onStateChange': onPlayerStateOrPlaybackQualityChange,
          'onPlaybackQualityChange': onPlayerStateOrPlaybackQualityChange
        }
      });
    }

    // 4. Save player status changes and video quality changes
    changes = []

    function onPlayerStateOrPlaybackQualityChange(event) {
      var timestamp = new Date().toISOString();
      var playbackTime = player.getCurrentTime();

      if (typeof event.data === 'number') {
        playerState = event.data
        playbackQuality = player.getPlaybackQuality()
      } else {
        playbackQuality = event.data
        playerState = player.getPlayerState()
      }

      changes.push([timestamp, playbackTime, playerState, playbackQuality]);
    }
  </script>
</body>

</html>